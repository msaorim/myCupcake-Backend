// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  name       String
  email      String
  password   String
  //cpf        String
  //phone      String
  //active     Boolean?  @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  //address    Address   @relation(fields: [addressId], references: [id])
  //addressId  String    @unique
  //userType   UserType  @default(USER)
  //orders     Order[]

  @@map("DB_USERS")
}

//model Address {
//  id         String @id @default(uuid())
//  address    String
//  number     String
//  complement String
//  district   String
//  city       String
//  estate     String
//  zip_code   String
//user       User?

//  @@map("DB_ADDRESSES")
//}

//enum UserType {
//  ADMIN
//  USER
//  CLIENT
//}

//enum StatusType {
//  ABERTO
//  ENTREGUE
//  CANCELADO
//}

model Category {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  products   Product[]

  @@map("DB_CATEGORIES")
}

model Product {
  id          String    @id @default(uuid())
  name        String
  price       String
  description String
  banner      String
  created_at  DateTime? @default(now())
  updated_at  DateTime? @default(now())

  category    Category @relation(fields: [category_id], references: [id])
  category_id String

  @@map("DB_PRODUCTS")
}

//model Order {
//  id         String     @id @default(uuid())
//  status     StatusType @default(ABERTO)
//  client__id User       @relation(fields: [userId], references: [id])
//  userId     String
//  created_at DateTime?  @default(now())
//  updated_at DateTime?  @default(now())

//  @@map("DB_ORDERS")
//}
